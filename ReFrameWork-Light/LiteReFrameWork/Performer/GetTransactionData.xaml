<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetTransactionData" this:GetTransactionData.Config="[new Dictionary(of String, Object) from {{&quot;InputPath&quot;, &quot;../TestData/*.xls*&quot;}, {&quot;TempFolder&quot;, &quot;../TestData/Temp&quot;}}]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="TransactionData" Type="OutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="TransactionItem" Type="OutArgument(ui:QueueItem)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetRequestData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get next transaction data from an input Excel file as specified in Config.xlsx" DisplayName="GetTransactionData" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="inputData" />
      <Variable x:TypeArguments="sd:DataRow" Name="freshItem" />
    </Sequence.Variables>
    <If Condition="[Config.Keys.Contains(&quot;InputFile&quot;) AndAlso File.Exists(Config(&quot;InputFile&quot;).ToString)]" DisplayName="If existing input file" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Else>
        <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim inputPath As String = Config(&quot;InputPath&quot;).ToString&#xA;&#xA;If (File.Exists(inputPath)) Then&#xA;  Config(&quot;InputFile&quot;) = Config(&quot;InputPath&quot;)&#xA;Else&#xA;&#xA; Dim slash As Int32 = inputPath.LastIndexOfAny(&quot;/\&quot;.ToCharArray)&#xA; Dim files As String() = Directory.GetFiles(inputPath.Substring(0, slash), inputPath.Substring(slash+1))&#xA;&#xA; If (files.Count &gt; 0) Then&#xA;  inputPath = New FileInfo(files(0)).Name&#xA;  Console.WriteLine(&quot;New input file match: &quot; + inputPath)&#xA;  inputPath = Path.Combine(Config(&quot;TempFolder&quot;).ToString, inputPath)&#xA;  File.Move(files(0), inputPath)&#xA;  Config(&quot;InputFile&quot;) = inputPath&#xA; End If&#xA;&#xA;End If" DisplayName="Invoke code to get next input file" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
          <ui:InvokeCode.Arguments>
            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Config">[Config]</InOutArgument>
          </ui:InvokeCode.Arguments>
        </ui:InvokeCode>
      </If.Else>
    </If>
    <If Condition="[Config.Keys.Contains(&quot;InputFile&quot;) AndAlso File.Exists(Config(&quot;InputFile&quot;).ToString)]" DisplayName="If existing input file" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Get data from Excel file" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="[Config(&quot;InputFile&quot;).ToString]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Workbook" sap2010:WorkflowViewState.IdRef="Sequence_11">
                <ui:ExcelWriteCell Cell="D1" DisplayName="Insert Column Status" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sample" Text="Status" />
                <ui:ExcelWriteCell Cell="E1" DisplayName="Insert Column Message" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Sample" Text="Message" />
                <ui:ExcelReadRange AddHeaders="True" DataTable="[inputData]" DisplayName="Read Data" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="Sample">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <ui:ForEachRow DataTable="[inputData]" DisplayName="Search rows for a fresh one" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Loop" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Default="[row(&quot;Status&quot;).ToString.Trim]" Name="status" />
                        </Sequence.Variables>
                        <If Condition="[String.IsNullOrEmpty(status) OrElse status.StartsWith(&quot;Retry&quot;)]" DisplayName="If next item match" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Sequence DisplayName="Match" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <Assign DisplayName="Keep row found" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataRow">[freshItem]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataRow">[row]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Break DisplayName="Break search" sap2010:WorkflowViewState.IdRef="Break_2" />
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </If.Then>
    </If>
    <If Condition="[freshItem is Nothing]" DisplayName="If data to process" sap2010:WorkflowViewState.IdRef="If_3">
      <If.Then>
        <Assign DisplayName="Output Nothing" sap2010:WorkflowViewState.IdRef="Assign_14">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[TransactionData]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[Nothing]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Prepare output" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <Assign DisplayName="Initialize transaction data" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[TransactionData]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[new Dictionary(of String, Object)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="ID filed is required in the main file" DisplayName="Set transaction ID" sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[TransactionData("ID")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[freshItem("Name").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:ForEach x:TypeArguments="sd:DataColumn" DisplayName="Move data in dictionary structure" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[inputData.Columns]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="sd:DataColumn">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="col" />
                </ActivityAction.Argument>
                <Assign DisplayName="Set data values" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[TransactionData(col.ColumnName)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[freshItem(col)]</InArgument>
                  </Assign.Value>
                </Assign>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <Assign DisplayName="Keep row count for updates" sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[TransactionData("RowCount")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[inputData.Rows.Count]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="Keep row index for updates" sap2010:WorkflowViewState.IdRef="Assign_11">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[TransactionData("RowIndex")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[inputData.Rows.IndexOf(freshItem)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log found message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[String.Format(&quot;Next transaction [{0}/{1}] {2}&quot;, TransactionData(&quot;RowIndex&quot;), TransactionData(&quot;RowCount&quot;), TransactionData(&quot;ID&quot;))]" />
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>dz9DOlxDb2RlSHViXFVpUGF0aFxSZUZyYW1lV29ya1xQZXJmb3JtZXJcR2V0VHJhbnNhY3Rpb25EYXRhLnhhbWw7AWcBggIBAksD0QEOAgEBUAVYCgIBRlkFjQEKAgEjjgEFzwEKAgECUBNQfgIBR1IJVhkCAUhZE1l+AgEkWwmLASQCASWOAROOASsCAQOQAQmXARICAR+aAQnNARQCAQRUYFRoAgFJW8sBW/UBAgFEYQ+IARoCASaVAU6VAVcCASKSAU+SAWACASCbAQuiARQCARujAQuqARQCARerAQu7ARgCARK8AQvDARQCAQ7EAQvLARQCAQrMAQvMAa0CAgEFYhFipwECAUBjEWOpAQIBPGQRaiUCATdrEYcBIQIBJ6ABUKABcwIBHp0BUZ0BYgIBHKgBNqgBUgIBGqUBN6UBTgIBGKsBnAGrAbEBAgEWsQERuAEaAgETwQE2wQFMAgERvgE3vgFUAgEPyQE2yQFZAgENxgE3xgFUAgELzAF+zAGqAgIBBmIpYi0CAUNinAFipAECAUJijgFilgECAUFjKWMtAgE/Y50BY6YBAgE+Y48BY5cBAgE9ZEBkTQIBOmcXZ0YCATlkowFkqwECAThrKms3AgE1cReEASICASi2ATy2AUwCARWzAT2zAV4CARRzSHNxAgEpdRmDAR4CASp1J3VzAgErdx2BASgCAS54H38oAgEwgAEfgAFwAgEvfUx9UQIBM3pNelgCATE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="InvokeCode_1" sap:VirtualizedContainerService.HintSize="314,164" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="677,314" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="516,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="516,87" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="516,59" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Break_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,395">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="486,519">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="516,667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="538,1144">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="552,1253">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="677,1403" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="314,195" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,880">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="677,1030">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="699,2979">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRequestData_1" sap:VirtualizedContainerService.HintSize="739,3059" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>