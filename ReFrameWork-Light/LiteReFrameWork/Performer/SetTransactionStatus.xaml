<Activity mc:Ignorable="sap sap2010 sads" x:Class="SetRequestStatus" this:SetRequestStatus.Config="[new Dictionary(of String, Object) from {{&quot;InputFile&quot;, &quot;SampleData.xlsx&quot;}}]" this:SetRequestStatus.Status="[Nothing]" this:SetRequestStatus.TransactionData="[new Dictionary(of String, Object) from {{&quot;RowIndex&quot;, 0}}]" this:SetRequestStatus.Detail="[Nothing]" this:SetRequestStatus.TransactionItem="[Nothing]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Status" Type="InArgument(x:String)" />
    <x:Property Name="TransactionData" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Detail" Type="InArgument(x:String)" />
    <x:Property Name="TransactionItem" Type="InArgument(ui:QueueItem)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SetRequestStatus_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Save transaction progress status back to Excel file: Error, Retry, Fail, Complete" DisplayName="SetTransactionStatus" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <ui:LogMessage DisplayName="Log status message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Transaction status &quot; + Status + &quot;: &quot; + Detail]" />
    <If Condition="[String.IsNullOrEmpty(Detail)]" DisplayName="If any detail, Try rephrasing" sap2010:WorkflowViewState.IdRef="If_5">
      <If.Else>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetErrorDescription workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\GetErrorDescription.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InOutArgument x:TypeArguments="x:String" x:Key="ErrorMessage">[Detail]</InOutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="[Config(&quot;InputFile&quot;).ToString]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Workbook" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="ui:GenericValue" Name="index" />
            </Sequence.Variables>
            <Assign DisplayName="Set cell row index" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:GenericValue">[index]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:GenericValue">[(2+CType(TransactionData("RowIndex"), Int32)).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ExcelWriteCell Cell="[&quot;D&quot;+index]" DisplayName="Set cell 'Status'" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sample" Text="[Status]" />
            <ui:ExcelWriteCell Cell="[&quot;E&quot;+index]" DisplayName="Set cell 'Message'" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Sample" Text="[Detail]" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <If Condition="[Status.StartsWith(&quot;Retry&quot;) OrElse CType(TransactionData(&quot;RowIndex&quot;), Int32) &lt; CType(TransactionData(&quot;RowCount&quot;), Int32) - 1]" DisplayName="If last item per file" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Else>
        <InvokeMethod DisplayName="Invoke File.Move" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Move" TargetType="si:File">
          <InArgument x:TypeArguments="x:String">[Config("InputFile").ToString]</InArgument>
          <InArgument x:TypeArguments="x:String">[Path.Combine(Config("OutputPath").ToString, new FileInfo(Config("InputFile").ToString).Name)]</InArgument>
        </InvokeMethod>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d0FDOlxDb2RlSHViXFVpUGF0aFxSZUZyYW1lV29ya1xQZXJmb3JtZXJcU2V0VHJhbnNhY3Rpb25TdGF0dXMueGFtbCAB+AIBggMBBgHiAQHsAQEFAZQCAdkCAQQBYwHDAQEDAaoDAbQDAQJKA3YOAgEBSwVLwgECASFMBVQKAgEaVQVsIAIBCG0FdAoCAQJLeUu/AQIBIkwTTDMCARtOCVIhAgEdVcYBVfABAgEYWwtpFgIBCW0TbbMBAgEDbwlyGAIBBFBMUFQCAR9OxAFO6AECAR5fDWYWAgEUZw1ntQECAQ9oDWi2AQIBCnAycFACAQZxMnGQAQIBBWQ/ZHcCARdhQGFHAgEVZyVnPAIBE2eoAWeyAQIBEWeaAWeiAQIBEGglaDwCAQ5oqQFoswECAQxomwFoowECAQs=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="464,93" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,237">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="464,547" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="218.5,134" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,284" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,1433">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SetRequestStatus_1" sap:VirtualizedContainerService.HintSize="526,1513" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>